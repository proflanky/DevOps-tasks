apiVersion: v1
kind: Service
metadata:
  name: vote-service
  namespace: vote
spec:
  selector:
    app: vote-app
  type: NodePort
  ports:
  - name: vote-app
    protocol: TCP
    port: 5000
    targetPort: 80
    nodePort: 31000
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: vote-deployment
  namespace: vote
  labels:
    app: vote-app
spec:
  selector:
    matchLabels:
      app: vote-app
  replicas: 1
  template:
    metadata:
      labels:
        app: vote-app
    spec:
      containers:
      - name:  vote
        image: kodekloud/examplevotingapp_vote:before
        ports:
        - containerPort: 80
      restartPolicy: Always
---
apiVersion: v1
kind: Service
metadata:
  name: redis
  namespace: vote
spec:
  selector:
    name: redis-deployment
    app: vote-app
  type: ClusterIP
  ports:
  - name: redis
    protocol: TCP
    port: 6379
    targetPort: 6379
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis-deployment
  namespace: vote
  labels:
    app: vote-app
spec:
  selector:
    matchLabels:
      app: vote-app
  replicas: 1
  template:
    metadata:
      labels:
        app: vote-app
    spec:
      containers:
      - name: redis
        image: redis:alpine
        ports:
        - containerPort: 80
        volumeMounts:
        - name: redis-data
          mountPath: /data
      volumes:
        - name: redis-data
          emptyDir: {}
      restartPolicy: Always
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: worker
  namespace: vote
  labels:
    app: vote-app
spec:
  selector:
    matchLabels:
      app: vote-app
  replicas: 1
  template:
    metadata:
      labels:
        app: vote-app
    spec:
      containers:
      - name:  worker
        image: kodekloud/examplevotingapp_worker
      restartPolicy: Always
---
apiVersion: v1
kind: Service
metadata:
  name: db
  namespace: vote
spec:
  selector:
    app: vote-app
  type: ClusterIP
  ports:
  - name: db
    protocol: TCP
    port: 5432
    targetPort: 5432
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: db-deployment
  namespace: vote
  labels:
    app: vote-app
spec:
  selector:
    matchLabels:
      app: vote-app
  replicas: 1
  template:
    metadata:
      labels:
        app: vote-app
    spec:
      containers:
      - name:  postgres
        image: postgres:9.4
        env:
        - name: POSTGRES_USER
          value: postgres
        - name: POSTGRES_PASSWORD
          value: postgres
        - name: POSTGRES_HOST_AUTH_METHOD
          value: trust
        ports:
        - containerPort: 5432
        volumeMounts:
        - name: db-data
          mountPath: /var/lib/postgresql/data
      volumes:
        - name: db-data
          emptyDir: {}   
      restartPolicy: Always
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: result-deployment
  namespace: vote
  labels:
    app: vote-app
spec:
  selector:
    matchLabels:
      app: vote-app
  replicas: 1
  template:
    metadata:
      labels:
        app: vote-app
    spec:
      containers:
      - name: result
        image: kodekloud/examplevotingapp_result:before
        ports:
        - containerPort: 80
      restartPolicy: Always
---
apiVersion: v1
kind: Service
metadata:
  name: result-service
  namespace: vote
spec:
  selector:
    app: vote-app
  type: NodePort
  ports:
  - name: vote-app
    protocol: TCP
    port: 5001
    targetPort: 80
    nodePort: 31001
